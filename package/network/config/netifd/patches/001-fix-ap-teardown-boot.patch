Index: netifd-2022-02-20-136006b8/utils.c
===================================================================
--- netifd-2022-02-20-136006b8.orig/utils.c
+++ netifd-2022-02-20-136006b8/utils.c
@@ -18,6 +18,7 @@
 #include <arpa/inet.h>
 #include <netinet/in.h>
 #include <sys/socket.h>
+#include "netifd.h"
 
 #ifdef __APPLE__
 #include <libproc.h>
@@ -176,8 +177,6 @@ crc32_file(FILE *fp)
 
 bool check_pid_path(int pid, const char *exe)
 {
-	const char deleted[] = " (deleted)";
-	const int deleted_len = strlen(deleted);
 	int proc_exe_len;
 	int exe_len = strlen(exe);
 
@@ -187,19 +186,26 @@ bool check_pid_path(int pid, const char
 	proc_exe_len = proc_pidpath(pid, proc_exe_buf, sizeof(proc_exe_buf));
 #else
 	char proc_exe[32];
-	char *proc_exe_buf = alloca(exe_len);
+	char *proc_exe_buf = alloca(exe_len + 128);
 
 	sprintf(proc_exe, "/proc/%d/exe", pid);
 	proc_exe_len = readlink(proc_exe, proc_exe_buf, exe_len);
 #endif
 
-	if (proc_exe_len == exe_len)
-		return !memcmp(exe, proc_exe_buf, exe_len);
-	else if (proc_exe_len == exe_len + deleted_len)
-		return !memcmp(exe, proc_exe_buf, exe_len) &&
-			!memcmp(exe + exe_len, deleted, deleted_len);
-	else
-		return false;
+	if (proc_exe_len != exe_len) 
+	{
+               D(WIRELESS, "check proc fail1 '%s' pid %d proc_exe=%s proc_exe_buf=%s exe_len=%d proc_exe_len=%d\n", exe, pid,proc_exe,proc_exe_buf,exe_len,proc_exe_len);
+               //check if proc_exe is substr of proc_exe_buf
+               //RM#1938 for when first boot ,link /usr/sbin/wpad may refer to /tmp/root/usr/sbin/wpad when mount switch from /tmp/root
+               if(proc_exe_len > 0 && strstr(proc_exe_buf,exe))
+		{
+                       D(WIRELESS, "check proc in substr exe=%s proc_exe=%s\n",exe,proc_exe_buf);
+                       return true;
+                }
+                return false;
+        }
+
+	return !memcmp(exe, proc_exe_buf, exe_len);
 }
 
 static const char * const uci_validate_name[__BLOBMSG_TYPE_LAST] = {
