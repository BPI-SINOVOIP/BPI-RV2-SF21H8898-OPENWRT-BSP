--- a/net/mac80211/cfg.c
+++ b/net/mac80211/cfg.c
@@ -845,8 +845,12 @@ static int ieee80211_set_monitor_channel
 					  local->monitor_sdata);
 		if (sdata) {
 			ieee80211_vif_release_channel(sdata);
+#ifdef CPTCFG_MAC80211_SIFLOWER_MONITOR_ENABLE
+			ret = ieee80211_vif_use_channel(sdata, chandef,IEEE80211_CHANCTX_SHARED);
+#else
 			ret = ieee80211_vif_use_channel(sdata, chandef,
 					IEEE80211_CHANCTX_EXCLUSIVE);
+#endif
 		}
 	} else if (local->open_count == local->monitors) {
 		local->_oper_chandef = *chandef;
--- a/net/mac80211/iface.c
+++ b/net/mac80211/iface.c
@@ -629,8 +629,10 @@ static void ieee80211_do_stop(struct iee
 	ieee80211_configure_filter(local);
 	ieee80211_hw_config(local, hw_reconf_flags);
 
+#ifndef CPTCFG_MAC80211_SIFLOWER_MONITOR_ENABLE
 	if (local->monitors == local->open_count)
 		ieee80211_add_virtual_monitor(local);
+#endif
 }
 
 static void ieee80211_stop_mbssid(struct ieee80211_sub_if_data *sdata)
@@ -1129,6 +1131,10 @@ int ieee80211_add_virtual_monitor(struct
 		 wiphy_name(local->hw.wiphy));
 	sdata->wdev.iftype = NL80211_IFTYPE_MONITOR;
 
+#ifdef CPTCFG_MAC80211_SIFLOWER_MONITOR_ENABLE
+	memcpy(sdata->vif.addr, local->hw.wiphy->perm_addr, ETH_ALEN);
+#endif
+
 	sdata->encrypt_headroom = IEEE80211_ENCRYPT_HEADROOM;
 
 	ieee80211_set_default_queues(sdata);
@@ -1153,8 +1159,12 @@ int ieee80211_add_virtual_monitor(struct
 	mutex_unlock(&local->iflist_mtx);
 
 	mutex_lock(&local->mtx);
+#ifdef CPTCFG_MAC80211_SIFLOWER_MONITOR_ENABLE
+	ret = ieee80211_vif_use_channel(sdata, &local->monitor_chandef,IEEE80211_CHANCTX_SHARED);
+#else
 	ret = ieee80211_vif_use_channel(sdata, &local->monitor_chandef,
 					IEEE80211_CHANCTX_EXCLUSIVE);
+#endif
 	mutex_unlock(&local->mtx);
 	if (ret) {
 		mutex_lock(&local->iflist_mtx);
@@ -1166,6 +1176,10 @@ int ieee80211_add_virtual_monitor(struct
 		return ret;
 	}
 
+#ifdef IEEE80211_CHANCTX_EXCLUSIVE
+	set_bit(SDATA_STATE_RUNNING, &sdata->state);
+#endif
+
 	skb_queue_head_init(&sdata->skb_queue);
 	skb_queue_head_init(&sdata->status_queue);
 	INIT_WORK(&sdata->work, ieee80211_iface_work);
@@ -1323,7 +1337,11 @@ int ieee80211_do_open(struct wireless_de
 			res = drv_add_interface(local, sdata);
 			if (res)
 				goto err_stop;
+#ifdef CPTCFG_MAC80211_SIFLOWER_MONITOR_ENABLE
+	} else if (local->monitors == 0) {
+#else
 		} else if (local->monitors == 0 && local->open_count == 0) {
+#endif
 			res = ieee80211_add_virtual_monitor(local);
 			if (res)
 				goto err_stop;
--- a/net/mac80211/util.c
+++ b/net/mac80211/util.c
@@ -2648,7 +2648,11 @@ int ieee80211_reconfig(struct ieee80211_
 
  wake_up:
 
+#ifdef CPTCFG_MAC80211_SIFLOWER_MONITOR_ENABLE
+	if (local->monitors > 0)
+#else
 	if (local->monitors == local->open_count && local->monitors > 0)
+#endif
 		ieee80211_add_virtual_monitor(local);
 
 	/*
--- a/net/wireless/chan.c
+++ b/net/wireless/chan.c
@@ -1261,9 +1261,10 @@ int cfg80211_set_monitor_channel(struct
 {
 	if (!rdev->ops->set_monitor_channel)
 		return -EOPNOTSUPP;
+#ifndef CPTCFG_CFG80211_SIFLOWER_MONITOR_ENABLE
 	if (!cfg80211_has_monitors_only(rdev))
 		return -EBUSY;
-
+#endif
 	return rdev_set_monitor_channel(rdev, chandef);
 }
 
